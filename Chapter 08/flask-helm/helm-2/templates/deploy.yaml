apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: /metrics
    prometheus.io/port: flaskport
  labels:
    app: flask-robot
    release: prometheus
  name: flask-robot
  namespace: {{ .Values.namespace.name }} 
spec:
  replicas: {{ .Values.replicaCount }} 
  selector:
    matchLabels:
      app: flask-robot
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: flask-robot
    spec:
      containers:
      - image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: flask-robot
        ports:
        - containerPort: {{ .Values.ports.containerPort }}
          protocol: {{ .Values.ports.protocol }}
        resources:
          requests:
            memory: {{ .Values.resources.requests.memory }}
            cpu: {{ .Values.resources.requests.cpu }}
          limits:
            memory: {{ .Values.resources.limits.memory }}
            cpu: {{ .Values.resources.limits.cpu }}
